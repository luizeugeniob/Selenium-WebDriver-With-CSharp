// <auto-generated />
using System;
using EAuction.WebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EAuction.Data.Migrations
{
    [DbContext(typeof(EAuctionContext))]
    [Migration("20201030025447_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EAuction.Core.Auction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<DateTime>("FinishAuctionDate");

                    b.Property<string>("Image")
                        .IsRequired();

                    b.Property<double>("InitialAmount");

                    b.Property<DateTime>("StartAuctionDate");

                    b.Property<string>("State")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<int?>("WinnerId");

                    b.HasKey("Id");

                    b.HasIndex("WinnerId");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("EAuction.Core.Bid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int>("AuctionId");

                    b.Property<int>("InterestedId");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("InterestedId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("EAuction.Core.Favorite", b =>
                {
                    b.Property<int>("AuctionId");

                    b.Property<int>("InterestedId");

                    b.HasKey("AuctionId", "InterestedId");

                    b.HasIndex("InterestedId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("EAuction.Core.Interested", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Interesteds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jane Doe"
                        },
                        new
                        {
                            Id = 3,
                            Name = "John Smith"
                        });
                });

            modelBuilder.Entity("EAuction.Core.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<int?>("InterestedId");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("InterestedId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "johndoe@example.org",
                            InterestedId = 1,
                            Password = "123"
                        },
                        new
                        {
                            Id = 2,
                            Email = "janedoe@example.org",
                            InterestedId = 2,
                            Password = "456"
                        },
                        new
                        {
                            Id = 3,
                            Email = "smithjohn@example.org",
                            Password = "123"
                        });
                });

            modelBuilder.Entity("EAuction.Core.Auction", b =>
                {
                    b.HasOne("EAuction.Core.Bid", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerId");
                });

            modelBuilder.Entity("EAuction.Core.Bid", b =>
                {
                    b.HasOne("EAuction.Core.Auction", "Auction")
                        .WithMany("Bids")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EAuction.Core.Interested", "Interested")
                        .WithMany("Bids")
                        .HasForeignKey("InterestedId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EAuction.Core.Favorite", b =>
                {
                    b.HasOne("EAuction.Core.Auction", "FavoriteAuction")
                        .WithMany("Followers")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EAuction.Core.Interested", "Follower")
                        .WithMany("Favorites")
                        .HasForeignKey("InterestedId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EAuction.Core.User", b =>
                {
                    b.HasOne("EAuction.Core.Interested", "Interested")
                        .WithMany()
                        .HasForeignKey("InterestedId");
                });
#pragma warning restore 612, 618
        }
    }
}
